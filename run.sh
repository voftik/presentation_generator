#!/bin/bash
# -*- coding: utf-8 -*-
# RW Tech PPTX Generator - Universal Runner Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
BRIGHT_RED='\033[1;31m'
BRIGHT_GREEN='\033[1;32m'
BRIGHT_BLUE='\033[1;34m'
BRIGHT_PURPLE='\033[1;35m'
BRIGHT_CYAN='\033[1;36m'
BOLD='\033[1m'
DIM='\033[2m'
NC='\033[0m' # No Color

# ASCII —Å–∏–º–≤–æ–ª—ã –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
CHECK_MARK="‚úì"
CROSS_MARK="‚úó"
WARNING_MARK="‚ö†"
ARROW_RIGHT="‚Üí"
LOADING_SPINNER=("‚†ã" "‚†ô" "‚†π" "‚†∏" "‚†º" "‚†¥" "‚†¶" "‚†ß")
PROGRESS_BAR=("‚ñè" "‚ñé" "‚ñç" "‚ñå" "‚ñã" "‚ñä" "‚ñâ" "‚ñà")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏–Ω–Ω–µ—Ä–∞
spinner() {
    local pid=$1
    local message=$2
    local i=0
    
    while kill -0 $pid 2>/dev/null; do
        printf "\r${CYAN}${LOADING_SPINNER[i]} $message${NC}"
        i=$(((i + 1) % ${#LOADING_SPINNER[@]}))
        sleep 0.1
    done
    
    printf "\r${GREEN}${CHECK_MARK} $message –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
progress_bar() {
    local current=$1
    local total=$2
    local message=$3
    local width=40
    
    local percentage=$((current * 100 / total))
    local filled=$((current * width / total))
    local empty=$((width - filled))
    
    printf "\r${CYAN}$message ${BRIGHT_BLUE}["
    printf "%*s" $filled | tr ' ' '‚ñà'
    printf "%*s" $empty | tr ' ' '‚ñí'
    printf "] ${percentage}%%${NC}"
    
    if [ $current -eq $total ]; then
        printf "\n"
    fi
}

# ASCII –∞—Ä—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏
print_ascii_header() {
    echo -e "${BRIGHT_PURPLE}"
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                              ‚ïë
‚ïë  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó    ‚ïë
‚ïë  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë    ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ïë
‚ïë  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë    ‚ïë
‚ïë  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë    ‚ïë
‚ïë  ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ïë
‚ïë  ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù        ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïë
‚ïë                                                              ‚ïë
‚ïë            üöÄ PPTX GENERATOR - UNIVERSAL RUNNER üöÄ           ‚ïë
‚ïë                  RW Tech Solutions | 2025                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
}

print_ascii_divider() {
    local symbol=${1:-"‚ïê"}
    local length=${2:-60}
    echo -e "${BRIGHT_CYAN}$(printf "%*s" $length | tr ' ' $symbol)${NC}"
}

print_ascii_box() {
    local message=$1
    local color=${2:-$CYAN}
    local length=${#message}
    local total_length=$((length + 4))
    
    echo -e "${color}‚îå$(printf "%*s" $((total_length - 2)) | tr ' ' '‚îÄ')‚îê${NC}"
    echo -e "${color}‚îÇ $message ‚îÇ${NC}"
    echo -e "${color}‚îî$(printf "%*s" $((total_length - 2)) | tr ' ' '‚îÄ')‚îò${NC}"
}

# –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[${DIM}INFO${NC}${BLUE}]${NC} ${ARROW_RIGHT} $1"
}

print_success() {
    echo -e "${GREEN}[${BOLD}SUCCESS${NC}${GREEN}]${NC} ${CHECK_MARK} $1"
}

print_warning() {
    echo -e "${YELLOW}[${BOLD}WARNING${NC}${YELLOW}]${NC} ${WARNING_MARK} $1"
}

print_error() {
    echo -e "${RED}[${BOLD}ERROR${NC}${RED}]${NC} ${CROSS_MARK} $1"
}

print_header() {
    echo -e "${BRIGHT_PURPLE}$1${NC}"
}

print_step() {
    local step_num=$1
    local step_title=$2
    local icon=${3:-"üîß"}
    
    echo ""
    print_ascii_divider "‚îÄ" 60
    echo -e "${BRIGHT_CYAN}${icon} –≠–¢–ê–ü ${step_num}: ${BOLD}$step_title${NC}"
    print_ascii_divider "‚îÄ" 60
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# –ì–ª–∞–≤–Ω—ã–π ASCII –∑–∞–≥–æ–ª–æ–≤–æ–∫
clear
print_ascii_header

print_status "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${BOLD}$SCRIPT_DIR${NC}"
sleep 0.5

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 1 "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python" "üêç"

echo -e "${DIM}–ü–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ Python...${NC}"
(sleep 1) &
spinner $! "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"

if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version 2>&1)
    print_success "Python –æ–±–Ω–∞—Ä—É–∂–µ–Ω: ${BOLD}$PYTHON_VERSION${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    PYTHON_MAJOR=$(python3 -c "import sys; print(sys.version_info.major)")
    PYTHON_MINOR=$(python3 -c "import sys; print(sys.version_info.minor)")
    
    if [ $PYTHON_MAJOR -ge 3 ] && [ $PYTHON_MINOR -ge 7 ]; then
        print_success "–í–µ—Ä—Å–∏—è Python —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è ‚â• 3.7)"
    else
        print_error "–í–µ—Ä—Å–∏—è Python $PYTHON_MAJOR.$PYTHON_MINOR —É—Å—Ç–∞—Ä–µ–ª–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è ‚â• 3.7)"
        exit 1
    fi
else
    print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è  
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 2 "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è" "üèóÔ∏è"
VENV_DIR="$SCRIPT_DIR/venv"

if [ -d "$VENV_DIR" ]; then
    print_status "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å..."
    
    if [ -f "$VENV_DIR/bin/python" ]; then
        VENV_PYTHON_VERSION=$("$VENV_DIR/bin/python" --version 2>&1)
        print_status "Python –≤ venv: ${BOLD}$VENV_PYTHON_VERSION${NC}"
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
        SYSTEM_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
        VENV_VERSION=$("$VENV_DIR/bin/python" -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')" 2>/dev/null || echo "unknown")
        
        if [ "$SYSTEM_VERSION" != "$VENV_VERSION" ]; then
            print_warning "–í–µ—Ä—Å–∏–∏ Python –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç (—Å–∏—Å—Ç–µ–º–∞: $SYSTEM_VERSION, venv: $VENV_VERSION)"
            print_status "–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            rm -rf "$VENV_DIR"
        else
            print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ"
        fi
    else
        print_warning "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        rm -rf "$VENV_DIR"
    fi
fi

if [ ! -d "$VENV_DIR" ]; then
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    (python3 -m venv "$VENV_DIR") &
    spinner $! "–°–æ–∑–¥–∞–Ω–∏–µ venv"
    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_status "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "$VENV_DIR/bin/activate" ]; then
    # –ü–æ–ø—ã—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    set +e  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º exit on error
    source "$VENV_DIR/bin/activate" 2>/dev/null
    ACTIVATION_RESULT=$?
    set -e  # –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ exit on error
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    if [ $ACTIVATION_RESULT -eq 0 ] && [ "$VIRTUAL_ENV" = "$VENV_DIR" ]; then
        print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${DIM}$VIRTUAL_ENV${NC}"
    else
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –æ–±–Ω–æ–≤–ª—è–µ–º PATH
        print_warning "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥..."
        export PATH="$VENV_DIR/bin:$PATH"
        export VIRTUAL_ENV="$VENV_DIR"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python –∏–∑ venv –¥–æ—Å—Ç—É–ø–µ–Ω
        if [ -x "$VENV_DIR/bin/python" ]; then
            print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: ${DIM}$VENV_DIR${NC}"
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
            exit 1
        fi
    fi
else
    print_error "–§–∞–π–ª –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $VENV_DIR/bin/activate"
    exit 1
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 3 "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤" "üì¶"

print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏..."
("$VENV_DIR/bin/python" -m pip install --upgrade pip --quiet) &
spinner $! "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"

PIP_VERSION=$("$VENV_DIR/bin/pip" --version)
print_success "pip –æ–±–Ω–æ–≤–ª–µ–Ω: ${BOLD}$PIP_VERSION${NC}"

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 4 "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" "üìö"

# –°—á–µ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
TOTAL_DEPS=5
CURRENT_DEP=0

# –ë–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
("$VENV_DIR/bin/pip" install --upgrade python-pptx requests tqdm --quiet) &
PID=$!
while kill -0 $PID 2>/dev/null; do
    progress_bar $((++CURRENT_DEP)) $TOTAL_DEPS "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    sleep 0.2
done
print_success "–ë–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# OpenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."
if "$VENV_DIR/bin/python" -c "import openai; print(f'OpenAI –≤–µ—Ä—Å–∏—è: {openai.__version__}')" 2>/dev/null; then
    OPENAI_VERSION=$("$VENV_DIR/bin/python" -c "import openai; print(openai.__version__)" 2>/dev/null)
    print_success "OpenAI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${BOLD}$OPENAI_VERSION${NC}"
    
    if "$VENV_DIR/bin/python" -c "import openai; from packaging import version; exit(0 if version.parse(openai.__version__) >= version.parse('1.0.0') else 1)" 2>/dev/null; then
        print_success "–í–µ—Ä—Å–∏—è OpenAI —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (‚â• 1.0.0)"
    else
        print_warning "–í–µ—Ä—Å–∏—è OpenAI —É—Å—Ç–∞—Ä–µ–ª–∞, –æ–±–Ω–æ–≤–ª—è–µ–º..."
        ("$VENV_DIR/bin/pip" install --upgrade "openai>=1.0.0" --quiet) &
        spinner $! "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ OpenAI"
        NEW_VERSION=$("$VENV_DIR/bin/python" -c "import openai; print(openai.__version__)")
        print_success "OpenAI –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –≤–µ—Ä—Å–∏–∏: ${BOLD}$NEW_VERSION${NC}"
    fi
else
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."
    ("$VENV_DIR/bin/pip" install "openai>=1.0.0" --quiet) &
    spinner $! "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenAI"
    OPENAI_VERSION=$("$VENV_DIR/bin/python" -c "import openai; print(openai.__version__)")
    print_success "OpenAI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${BOLD}$OPENAI_VERSION${NC}"
fi

# Google GenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Google GenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."
if "$VENV_DIR/bin/python" -c "import google.genai; print('Google GenAI –≤–µ—Ä—Å–∏—è: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')" 2>/dev/null; then
    print_success "Google GenAI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
else
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Google GenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."
    ("$VENV_DIR/bin/pip" install google-genai --quiet) &
    spinner $! "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Google GenAI"
    print_success "Google GenAI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ packaging
"$VENV_DIR/bin/pip" install packaging --quiet > /dev/null 2>&1 || true

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 5 "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" "üîç"

check_dependency() {
    local module_name=$1
    local import_name=${2:-$1}
    
    if "$VENV_DIR/bin/python" -c "import $import_name" 2>/dev/null; then
        print_success "${CHECK_MARK} $module_name - OK"
        return 0
    else
        print_error "${CROSS_MARK} $module_name - FAILED"
        return 1
    fi
}

DEPENDENCIES_OK=true

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
DEPS_TO_CHECK=(
    "python-pptx:pptx"
    "requests:requests"
    "tqdm:tqdm"
    "openai:openai"
    "google-genai:google.genai"
    "os:os"
    "sys:sys"
    "json:json"
    "base64:base64"
    "threading:threading"
    "queue:queue"
    "logging:logging"
    "datetime:datetime"
    "io:io"
    "re:re"
    "time:time"
)

TOTAL_CHECKS=${#DEPS_TO_CHECK[@]}
CURRENT_CHECK=0

for dep in "${DEPS_TO_CHECK[@]}"; do
    module_name="${dep%:*}"
    import_name="${dep#*:}"
    
    progress_bar $((++CURRENT_CHECK)) $TOTAL_CHECKS "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    if ! check_dependency "$module_name" "$import_name"; then
        DEPENDENCIES_OK=false
    fi
    sleep 0.1
done

if [ "$DEPENDENCIES_OK" = false ]; then
    print_error "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
    print_status "–ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    ("$VENV_DIR/bin/pip" install --force-reinstall python-pptx requests tqdm "openai>=1.0.0" google-genai --quiet) &
    spinner $! "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    if "$VENV_DIR/bin/python" -c "import pptx, requests, tqdm, openai, google.genai" 2>/dev/null; then
        print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        exit 1
    fi
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 6 "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞" "üìÅ"

check_file() {
    local file_path=$1
    local description=$2
    
    if [ -f "$file_path" ]; then
        print_success "${CHECK_MARK} $description: ${DIM}$file_path${NC}"
        return 0
    else
        print_error "${CROSS_MARK} $description –Ω–µ –Ω–∞–π–¥–µ–Ω: ${DIM}$file_path${NC}"
        return 1
    fi
}

check_dir() {
    local dir_path=$1
    local description=$2
    
    if [ -d "$dir_path" ]; then
        print_success "${CHECK_MARK} $description: ${DIM}$dir_path${NC}"
        return 0
    else
        print_warning "${WARNING_MARK} $description –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º: ${DIM}$dir_path${NC}"
        mkdir -p "$dir_path"
        print_success "${CHECK_MARK} $description —Å–æ–∑–¥–∞–Ω: ${DIM}$dir_path${NC}"
        return 0
    fi
}

FILES_OK=true

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
check_file "$SCRIPT_DIR/rwtech_pptx_generator.py" "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç" || FILES_OK=false
check_file "$SCRIPT_DIR/pptx_content/slide_content.txt" "–ö–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∞–π–¥–æ–≤" || FILES_OK=false
check_file "$SCRIPT_DIR/pptx_template/–®–∞–±–ª–æ–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ 16—Ö9.pptx" "–®–∞–±–ª–æ–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏" || FILES_OK=false

# –†–∞–±–æ—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
check_dir "$SCRIPT_DIR/pptx_result" "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
check_dir "$SCRIPT_DIR/logs" "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤"
check_dir "$SCRIPT_DIR/prompts_for_img" "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤"

if [ "$FILES_OK" = false ]; then
    print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 7 "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏" "üß™"

print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ Python..."

# –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
("$VENV_DIR/bin/python" -c "
import sys, os
sys.path.insert(0, '$SCRIPT_DIR')

# –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
try:
    from pptx import Presentation
    import requests
    import openai
    from openai import OpenAI
    print('${CHECK_MARK} –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
except Exception as e:
    print(f'${CROSS_MARK} –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    sys.exit(1)

# –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
try:
    client = OpenAI(api_key='test_key')
    if hasattr(client, 'images') and hasattr(client.images, 'generate'):
        print('${CHECK_MARK} OpenAI –∫–ª–∏–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω')
    else:
        print('${CROSS_MARK} OpenAI –∫–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
        sys.exit(1)
except Exception as e:
    print(f'${CROSS_MARK} –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞: {e}')
    sys.exit(1)

print('${CHECK_MARK} –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')
") &

spinner $! "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤"

if [ $? -eq 0 ]; then
    print_success "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
else
    print_error "–û—à–∏–±–∫–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏!"
    exit 1
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 8: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 8 "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤" "üìÑ"

ENV_INFO_FILE="$SCRIPT_DIR/environment_info.txt"
cat > "$ENV_INFO_FILE" << EOF
RW Tech PPTX Generator - Environment Information
===============================================
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)
–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SCRIPT_DIR
Python –≤–µ—Ä—Å–∏—è: $("$VENV_DIR/bin/python" --version)
Virtual Environment: $VIRTUAL_ENV

–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:
$("$VENV_DIR/bin/pip" list | grep -E "(python-pptx|requests|tqdm|openai)" | sort)

–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
OS: $(uname -s)
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)

–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:
$(find "$SCRIPT_DIR" -maxdepth 2 -name "*.py" -o -name "*.txt" -o -name "*.pptx" -o -name "*.md" | sort)

–°—Ç–∞—Ç—É—Å: –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï ‚úì
EOF

print_success "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${DIM}$ENV_INFO_FILE${NC}"

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –≠–¢–ê–ü 9: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
print_step 9 "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫" "üéØ"

print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∑–∞–ø—É—Å–∫—É..."

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
if [ -f "$SCRIPT_DIR/rwtech_pptx_generator.py" ] && \
   [ -f "$VENV_DIR/bin/python" ] && \
   "$VENV_DIR/bin/python" -c "import pptx, requests, openai, google.genai" 2>/dev/null; then
    
    print_success "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ç–æ–≤—ã –∫ –∑–∞–ø—É—Å–∫—É!"
    echo ""
    
    # –ö—Ä–∞—Å–∏–≤—ã–π ASCII –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    echo -e "${BRIGHT_GREEN}"
    cat << 'EOF'
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë                                                                ‚ïë
    ‚ïë    üöÄ –ó–ê–ü–£–°–ö RW TECH PPTX GENERATOR üöÄ                        ‚ïë
    ‚ïë                                                                ‚ïë
    ‚ïë    ‚ñ∂Ô∏è  –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ                     ‚ïë
    ‚ïë    ‚ö° –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã                              ‚ïë
    ‚ïë    ‚ú® –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ                           ‚ïë
    ‚ïë    üéØ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏...                      ‚ïë
    ‚ïë                                                                ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    sleep 1
    
    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    exec "$VENV_DIR/bin/python" "$SCRIPT_DIR/rwtech_pptx_generator.py"
    
else
    print_error "–°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!"
    print_error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"
    
    echo -e "${RED}"
    cat << 'EOF'
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë                      ‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê ‚ùå                     ‚ïë
    ‚ïë                                                               ‚ïë
    ‚ïë   –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è      ‚ïë
    ‚ïë   –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–ø–æ–ª–∞–¥–æ–∫        ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    exit 1
fi