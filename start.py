#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
RW Tech PPTX Generator - Main Startup File
–ì–ª–∞–≤–Ω—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π PowerPoint

–ö–æ–º–ø–∞–Ω–∏—è: RW Tech - Revolutionary Workflows & Technology Solutions
–í–µ—Ä—Å–∏—è: 4.0 - Universal Edition
–î–∞—Ç–∞: 2025-06-02
"""

import sys
import os
import platform
from datetime import datetime

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 7):
        print("‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        print("   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ Python –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
        sys.exit(1)
    else:
        print(f"‚úì Python {sys.version.split()[0]} - OK")

def check_virtual_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    if hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        print("‚úì –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
        return True
    else:
        print("‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = [
        ('python-pptx', 'pptx'),
        ('requests', 'requests'),
        ('tqdm', 'tqdm')
    ]
    
    missing_packages = []
    
    for package_name, import_name in required_packages:
        try:
            __import__(import_name)
            print(f"‚úì {package_name} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ùå {package_name} - –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing_packages.append(package_name)
    
    return missing_packages

def print_system_info():
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"""
    print("\n" + "="*60)
    print("üöÄ RW TECH PPTX GENERATOR v4.0")
    print("   –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π PowerPoint")
    print("   —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π AI-–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π –∏ –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏")
    print("="*60)
    
    print(f"\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:")
    print(f"   –û–°: {platform.system()} {platform.release()}")
    print(f"   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {platform.machine()}")
    print(f"   Python: {sys.version.split()[0]}")
    print(f"   –î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"   –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

def check_file_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
    print(f"\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:")
    
    required_files = [
        ("rwtech_pptx_generator.py", "–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"),
        ("pptx_content/slide_content.txt", "–§–∞–π–ª —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å–ª–∞–π–¥–æ–≤"),
        ("pptx_template/–®–∞–±–ª–æ–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ 16—Ö9.pptx", "–®–∞–±–ª–æ–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏")
    ]
    
    required_dirs = [
        ("pptx_result", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"),
        ("prompts_for_img", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ AI"),
        ("img_generated", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è AI-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"),
        ("logs", "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤"),
        ("venv", "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
    ]
    
    all_ok = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    for file_path, description in required_files:
        if os.path.exists(file_path):
            print(f"   ‚úì {file_path} - {description}")
        else:
            print(f"   ‚ùå {file_path} - –û–¢–°–£–¢–°–¢–í–£–ï–¢ ({description})")
            all_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    for dir_path, description in required_dirs:
        if os.path.exists(dir_path):
            print(f"   ‚úì {dir_path}/ - {description}")
        else:
            print(f"   ‚ö†Ô∏è  {dir_path}/ - –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ ({description})")
    
    return all_ok

def install_dependencies_prompt(missing_packages):
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    if not missing_packages:
        return
        
    print(f"\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    for package in missing_packages:
        print(f"   - {package}")
    
    print(f"\nüí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:")
    if check_virtual_environment():
        print(f"   pip install {' '.join(missing_packages)}")
    else:
        print(f"   # –°–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        if platform.system() == "Windows":
            print(f"   venv\\Scripts\\activate")
        else:
            print(f"   source venv/bin/activate")
        print(f"   # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã:")
        print(f"   pip install {' '.join(missing_packages)}")
    
    try:
        response = input("\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
        if response in ['–¥–∞', 'yes', 'y', '–¥']:
            import subprocess
            try:
                print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...")
                cmd = [sys.executable, '-m', 'pip', 'install'] + missing_packages
                result = subprocess.run(cmd, check=True, capture_output=True, text=True)
                print("‚úì –ü–∞–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
                return True
            except subprocess.CalledProcessError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é.")
                return False
        else:
            print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
            return False
    except EOFError:
        print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º: –ø—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤.")
        return False

def show_configuration_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print(f"\n‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    
    config_file = "config.json"
    if os.path.exists(config_file):
        print(f"   ‚úì –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_file}")
        try:
            import json
            with open(config_file, 'r', encoding='utf-8') as f:
                config = json.load(f)
                if config.get('claude_api_key'):
                    print(f"   ‚úì Claude API –∫–ª—é—á: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print(f"   ‚ö†Ô∏è  Claude API –∫–ª—é—á: –Ω–µ –∑–∞–¥–∞–Ω")
                    
                if config.get('openai_api_key'):
                    print(f"   ‚úì OpenAI API –∫–ª—é—á: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print(f"   ‚ö†Ô∏è  OpenAI API –∫–ª—é—á: –Ω–µ –∑–∞–¥–∞–Ω")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    else:
        print(f"   ‚ö†Ô∏è  –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_keys = ['CLAUDE_API_KEY', 'OPENAI_API_KEY']
    for key in env_keys:
        if os.environ.get(key):
            print(f"   ‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {key}: –∑–∞–¥–∞–Ω–∞")
        else:
            print(f"   ‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {key}: –Ω–µ –∑–∞–¥–∞–Ω–∞")

def show_usage_instructions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print(f"\nüìö –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã:")
    print(f"   üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 60-—Å–ª–∞–π–¥–æ–≤–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print(f"   üé® –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —Å—Ç–æ—Ä–æ–Ω 16:9")
    print(f"   ü§ñ AI-–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é Claude + DALL-E 3 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    print(f"   üìä –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –º–∞–∫–µ—Ç—ã —Å —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–π —Ç–µ–∫—Å—Ç–∞")
    print(f"   üìù –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö")
    
    print(f"\nüéÆ –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã:")
    print(f"   1Ô∏è‚É£  –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º: —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ —à–∞–±–ª–æ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    print(f"   2Ô∏è‚É£  AI —Ä–µ–∂–∏–º: + –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π")
    
    print(f"\nüîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AI-–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è:")
    print(f"   ‚Ä¢ API –∫–ª—é—á Claude (–¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤)")
    print(f"   ‚Ä¢ API –∫–ª—é—á OpenAI (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)")

def run_main_generator():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞"""
    try:
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π...")
        print("-" * 60)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
        from rwtech_pptx_generator import RWTechPPTXGenerator
        
        generator = RWTechPPTXGenerator()
        generator.run()
        
        print("-" * 60)
        print("üéâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª rwtech_pptx_generator.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        sys.exit(1)
    except KeyboardInterrupt:
        print(f"\n\n‚èπÔ∏è  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
        sys.exit(1)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    try:
        # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print_system_info()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
        print(f"\nüîç –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:")
        check_python_version()
        venv_ok = check_virtual_environment()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        print(f"\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
        missing_packages = check_dependencies()
        
        if missing_packages:
            deps_installed = install_dependencies_prompt(missing_packages)
            if not deps_installed and not venv_ok:
                print(f"\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")
                sys.exit(1)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
        files_ok = check_file_structure()
        if not files_ok:
            print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã!")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö.")
            
            try:
                response = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
                if response not in ['–¥–∞', 'yes', 'y', '–¥']:
                    sys.exit(1)
            except EOFError:
                print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º: –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ...")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        show_configuration_info()
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        show_usage_instructions()
        
        # –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
        print(f"\n" + "="*60)
        try:
            input("üìã –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        except EOFError:
            print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º: –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
        
        # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        run_main_generator()
        
    except KeyboardInterrupt:
        print(f"\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º –º–æ–¥—É–ª–µ: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()